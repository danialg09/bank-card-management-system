openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/cards/{id}:
    get:
      tags:
        - card-controller
      operationId: findById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardResponse'
    put:
      tags:
        - card-controller
      operationId: updateStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardStatusRequest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardResponse'
    delete:
      tags:
        - card-controller
      operationId: deleteById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/transfer:
    post:
      tags:
        - transfer-controller
      operationId: transferMoney
      parameters:
        - name: from
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: to
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: amount
          in: query
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
  /api/cards:
    get:
      tags:
        - card-controller
      operationId: findAll
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardResponse'
    post:
      tags:
        - card-controller
      operationId: create
      parameters:
        - name: ownerId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardResponse'
  /api/auth/register:
    post:
      tags:
        - auth-controller
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
  /api/auth/refresh-token:
    post:
      tags:
        - auth-controller
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
  /api/auth/login:
    post:
      tags:
        - auth-controller
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /api/auth/log-out:
    post:
      tags:
        - auth-controller
      operationId: logout
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
  /api/cards/{id}/balance:
    get:
      tags:
        - card-controller
      operationId: balance
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardResponse'
  /api/auth/me:
    get:
      tags:
        - auth-controller
      operationId: getCurrentUser
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/admin/users:
    get:
      tags:
        - admin-user-controller
      operationId: findAll_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
  /api/admin/users/{id}:
    get:
      tags:
        - admin-user-controller
      operationId: findById_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponse'
    delete:
      tags:
        - admin-user-controller
      operationId: deleteById_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/admin/users/by-name/{username}:
    get:
      tags:
        - admin-user-controller
      operationId: findByUsername
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponse'
components:
  schemas:
    CardStatusRequest:
      type: object
      properties:
        status:
          type: string
          enum:
            - ACTIVE
            - BLOCKED
            - EXPIRED
    CardResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cardNumber:
          type: string
        ownerName:
          type: string
        expirationDate:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - BLOCKED
            - EXPIRED
        balance:
          type: number
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            type: string
            enum:
              - ROLE_USER
              - ROLE_ADMIN
          uniqueItems: true
        password:
          type: string
    SimpleResponse:
      type: object
      properties:
        message:
          type: string
    RefreshTokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
    RefreshTokenResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    LoginRequest:
      type: object
      properties:
        password:
          type: string
        username:
          type: string
    LoginResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        token:
          type: string
        refreshToken:
          type: string
        username:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            type: string
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            type: string
            enum:
              - ROLE_USER
              - ROLE_ADMIN
          uniqueItems: true